# pocket(1) completion                          -*- shell-script -*-
#
# Copyright (C) 2015  Vladimir Isaev <v.isaev@metrotek.spb.ru>
# Copyright (C) 2015  STC Metrotek [http://metrotek.spb.ru/]
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

_pocket()
{
    local cur prev cword
    _init_completion -s || return

    # dpkg-architecture -L -- too many architectures!
    arch_words='amd64 armel armhf i386 ia64 mips mipsel powerpc    \
                ppc64el s390 s390x sparc'

    # For regenerate this list just run this command and
    # exclude folders.
    #
    # _make_target_extract_script - function from Debian
    # make autocomplete. Sourced by make autocomlete.
    #
    # LC_ALL=C make -npq --file=~/pocket/Pocketfile 2>/dev/null | \
    # sed -nrf <(_make_target_extract_script -d)

    declare -A options_arr=(
                             ['bootstrap']=''
                             ['build']=''
                             ['buildpkg']=''
                             ['clean']=''
                             ['clean-builder']=''
                             ['clean-cache']=''
                             ['cleanpkg']=''
                             ['clean-repo']=''
                             ['default']=''
                             ['doc']=''
                             ['docextract']=''
                             ['download']=''
                             ['extract']=''
                             ['filecheck']=''
                             ['gencontrol']=''
                             ['getsource']=''
                             ['help']=''
                             ['init']='--quiet --verbose --version --help  \
                                       --config --flavour --avail-flavours \
                                       --arch --num --repo --update --'
                             ['install']=''
                             ['install-builddeps']=''
                             ['install-buildenv']=''
                             ['install-check']=''
                             ['install-clean']=''
                             ['install-repo']=''
                             ['install-shell']='--rooter --'
                             ['rebuild']=''
                             ['rebuildpkg']=''
                             ['reinstall-repo']=''
                             ['repo']=''
                             ['rm-updated']=''
                             ['shell']='--rooter --'
                             ['show-config']=''
                             ['show-targets']=''
                             ['sync-in']='--compose --over'
                             ['sync-out']=''
                             ['update']=''
                           )

    action_words=`echo "${!options_arr[@]}"`
    options_len=${#options_arr[@]}

    action=""

    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    i=1 # [0] element is program name
    while [[ $i -lt $COMP_CWORD ]]; do
        cword="${COMP_WORDS[$i]}"

        # Search for action.
        if [[ -z $action ]]; then
            for act in $action_words; do
                if [[ "$act" == "$cword" ]]; then
                    action="$act"
                    break
                fi
            done
        fi

        # Stop completion if '--' finded and it's not current option.
        if [[ "$cword" == "--" ]]; then
            return
        fi

        i=$(( $i + 1 ))
    done


    if [[ -z $action ]]; then

        options='--dir --arch --target --network --repo    \
                 --quiet --print-dirs --debug --deep-debug \
                 --dry-run --help --version'

        case $prev in
            -C|--dir)
                compopt -o plusdirs
                COMPREPLY=( $( compgen -A directory -- $cur ) )
                ;;
            -a|--arch|\
            -t|--target)
                COMPREPLY=( $( compgen -W "$arch_words" -- $cur ) )
                ;;
            *)
                case $cur in
                    -*)
                        COMPREPLY=( $( compgen -W "$options" -- $cur ) )
                        ;;
                    *)
                        COMPREPLY=( $( compgen -W "$action_words" -- $cur ) )
                        ;;
                esac
                ;;
        esac

    else

        options=${options_arr[$action]}

        case $prev in
            -a|--arch)
                COMPREPLY=( $( compgen -W "$arch_words" -- $cur ) )
                ;;
            -c|--config)
                compopt -o plusdirs
                COMPREPLY=( $( compgen -A file -- $cur ) )
                ;;
            -n|--num|\
            -r|--repo|\
            -f|--flavour)
                ;;
            *)
                case $cur in
                    -*)
                        COMPREPLY=( $( compgen -W "$options" -- $cur ) )
                        ;;
                    *)
                        case $action in
                            sync-in|\
                            sync-out)
                                compopt -o plusdirs
                                COMPREPLY=( $( compgen -A directory -W '.' \
                                               -- $cur ) )
                                ;;
                            init)
                                compopt -o plusdirs
                                COMPREPLY=( $( compgen -A directory -- $cur ) )
                                ;;
                        esac
                        ;;
                esac
                ;;
        esac

    fi

} &&
complete -F _pocket pocket
